I"¯<h1 id="purpose">Purpose</h1>

<p>The purpose of the Wireless Communication project (referred to in this report as
the ‚ÄúWC Project‚Äù) is to learn the essential skill of wireless communication
between Arduino boards, as well as reinforce time management and collaborative
skills.</p>

<p>The first skill acquired through the completion of the WC Project is the
essential skill of wireless communication between Arduino boards, which had not
been explored to date in the course. These basic wireless communication skills
have a wide range of applications for various more sophisticated projects.</p>

<p>The second skill reinforced through the completion of the WC Project is time
management and collaboration. The WC Project requires a partner to use his
Arduino and wireless module as the transmitter or receiver for communication.
Working on a project of this type with a partner adds a new layer of complexity
in terms of time management and collaboration skills needed in order to
successfully complete the project.</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Parts List</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">2 x 595 Shift Registers</td>
    </tr>
    <tr>
      <td style="text-align: center">LED Matrix Shield by E. Peterson</td>
    </tr>
    <tr>
      <td style="text-align: center">2 x NRF24L01 Wireless Modules</td>
    </tr>
    <tr>
      <td style="text-align: center">LED Bargraph</td>
    </tr>
  </tbody>
</table>

<h1 id="reference">Reference</h1>

<p><a href="http://mail.rsgc.on.ca/~ologush/WirelessLesson.html">Wireless Lesson</a></p>

<h1 id="procedure">Procedure</h1>

<p>The WC Project is made up of two unique circuits. The first circuit is the
transmitter, which consists of an Arduino connected to a wireless module. The
second circuit acts as the receiver, consisting of an Arduino, wireless module
and an LED Matrix Shield. However, the LED Matrix Shield designed by the
undersigned was not initially the display device. The initial display device was
an LED bar graph, which displayed the characters sent by the transmitter in
their binary form. Students were encouraged to improve the base circuit that
used a bar graph. The undersigned and his partner selected the LED Matrix Shield
to display the letters sent over wireless, as opposed to their binary
representation. With both circuits completed, Arduino code is used to set one
circuit as the transmitter and the other as the receiver, transmitting the data
by entering it into the serial monitor.</p>

<p><img src="../assets/img/WC/original.jpg" alt="First Breadboard Prototype" /></p>
<center><b>First Breadboard Prototype Circuit</b></center>

<p>The creation of the WC Project is split into 3 steps; building the demo circuit,
adding the bar graph display and serial input, and switching the bar graph to an
LED Matrix Shield display.</p>

<p>The first and simplest step in the construction of the WC Project was to build
the NRF24L01 demo circuit, which used two of the wireless modules to change the
brightness of an LED connected to the receiving Arduino using a potentiometer.
The code to complete this introduction was provided in class and served as a
basis for the code in the actual project.</p>

<p>The second step in the creation of the WC Project was to take user input on the
transmitter circuit and send it to the receiver side for purposes of display on
an LED bar graph. First, a 595 shift register was connected to the receiver
Arduino along with the LED bar graph. Once the bar graph was hooked up to the
receiver Arduino, the code had to be modified for both the transmitter and
receiver. The changes to the transmitter code were quite simple: rather than
collecting the input from a potentiometer using the <code class="highlighter-rouge">analogRead()</code> function, the
<code class="highlighter-rouge">Serial.read()</code> function was used to collect whatever character the user last
entered into the serial monitor. Since the value being transmitted to the
receiver Arduino is an ASCII character, that ASCII character has its own number
value, therefore making the display of the binary value of the character on the
bar graph very straightforward. The receiver code had to be modified to display
the binary value of the ASCII character on the bar graph using a single call to
the <code class="highlighter-rouge">shiftOut()</code> function built into the Arduino IDE used for transmitting data to
shift registers. Since each ASCII character has a number value, the received
character itself was simply passed into the <code class="highlighter-rouge">shiftOut()</code> function and shown on the
bar graph.</p>

<p><img src="../assets/img/WC/matrix-proto.jpg" alt="Breadboard Prototype" /></p>
<center><b>Breadboard Prototype with LED Matrix Shield Custom PCB</b></center>

:ET
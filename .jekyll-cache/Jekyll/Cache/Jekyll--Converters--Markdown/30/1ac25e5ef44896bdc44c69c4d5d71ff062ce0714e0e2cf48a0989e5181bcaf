I"#…<h1 id="purpose">Purpose</h1>
<p>The purpose of the Flex Equalizer Project (referred to in this report as the ‚ÄúFE
Project‚Äù) is to provide a unique project embedded right into the undersigned‚Äôs
engineering report, thus developing the critical skills of surface-mount
soldering and design on flexible PCBs. The undersigned‚Äôs particular flex PCB
design is a flexible equalizer building on top of the original GE Project. The
PCB is shown below:</p>

<p><img src="../assets/img/FE/proto1.jpg" alt="Flex PCB" /></p>
<center><b>Flex PCB Front</b></center>

<table>
  <thead>
    <tr>
      <th style="text-align: center">Parts List</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">100k Œ© Resistor</td>
    </tr>
    <tr>
      <td style="text-align: center">200k Œ© Resistor</td>
    </tr>
    <tr>
      <td style="text-align: center">1.5k Œ© Resistor</td>
    </tr>
    <tr>
      <td style="text-align: center">3 x 10k Œ© Resistors</td>
    </tr>
    <tr>
      <td style="text-align: center">6 x 220 Œ© Resistors</td>
    </tr>
    <tr>
      <td style="text-align: center">MSGEQ7 IC</td>
    </tr>
    <tr>
      <td style="text-align: center">ADMP401 MEMS SMD Microphone</td>
    </tr>
    <tr>
      <td style="text-align: center">OPA344 Amplifier</td>
    </tr>
    <tr>
      <td style="text-align: center">330 Œ© Resistor</td>
    </tr>
    <tr>
      <td style="text-align: center">470 Œ© Resistor</td>
    </tr>
    <tr>
      <td style="text-align: center">3 x 100 nF Capacitors</td>
    </tr>
    <tr>
      <td style="text-align: center">33 pF Capacitor</td>
    </tr>
    <tr>
      <td style="text-align: center">10 nF Capacitor</td>
    </tr>
    <tr>
      <td style="text-align: center">100 pF Capacitor</td>
    </tr>
    <tr>
      <td style="text-align: center">4.7 uF Capacitor</td>
    </tr>
    <tr>
      <td style="text-align: center">2 x 595 SMD Shift Registers</td>
    </tr>
    <tr>
      <td style="text-align: center">ATMega328PB TQFP</td>
    </tr>
    <tr>
      <td style="text-align: center">42 x 1206 SMD LEDs</td>
    </tr>
  </tbody>
</table>

<p>The first skill of PCB design was highly improved upon in the FE Project due to
the high complexity of this circuit unifying an LED matrix and equalizer
circuitry. The addition of unfamiliar surface mount components that had not been
tested in the prototype only made this more challenging.</p>

<p>The second skill acquired in the creation of this project was surface mount
soldering. The undersigned had little to no surface mount experience heading
into this project, thus making the soldering process difficult but important and
rewarding.</p>

<p>The third and most important skill improved upon in this project was assembly
programming. A second iteration of the equalizer code was written in AVR
assembly, which presented a unique challenge and opportunity to gain a stronger
understanding of low-level usage of the ADC (analog to digital converter).</p>

<h1 id="reference">Reference</h1>

<p><a href="https://learn.adafruit.com/ktowns-ultimate-creating-parts-in-eagle-tutorial/creating-a-package-outline">Creating Parts in Eagle</a></p>

<p><a href="https://www.sparkfun.com/products/9868">Sparkfun SMD Microphone Breakout</a></p>

<h1 id="procedure">Procedure</h1>

<p>The FE Project improves upon the original GE Project developed in the TEI3M
course. The FE used in the project is also a graphic equalizer, however, it is
mounted on a flexible PCB using fully surface mount components so it can be
laminated into a page in the undersigned‚Äôs engineering report. The second key
difference between the FE and its through-hole predecessor is the usage of a 7x6
LED Matrix to display audio levels as opposed I2C based bar graphs. The use of a
multi-plexed LED Matrix with standard shift registers also eliminates the need
for libraries in order to write code for the FE, thus allowing the code to be
re-written as mid-level AVR C or AVR Assembly.</p>

<p>The development of the FE Project is comprised of four important steps,
consisting of prototyping, PCB design, soldering and programming.</p>

<p>The first of three difficult steps to complete the FE Project was prototyping.
Although the undersigned completed an equalizer project on two occasions and
completed similar circuits on several occasions, there were new obstacles to
overcome in completing a properly functioning surface mount version. The first
challenge was outputting to an LED matrix, which was summarily bypassed thanks
to an LED matrix Arduino shield that the undersigned had previously developed,
thus avoiding a copious amount of extra wiring. The second difficulty related to
power delivery. Since the FE Project would ultimately be powered by a flexible
solar panel that only provides 3.7 V as opposed to 5, it had to be confirmed
that the circuit did not require the extra voltage or current. Fortunately, at
the cost of LED brightness, the prototype still operated by drawing a small
enough current that the solar panel was adequate under very bright sunlight. The
final and most difficult obstacle was finding specialized surface mount
components to replace the corresponding through-hole counterparts. The MSGEQ7
frequency analyzer chip was difficult to find in a SMD package along with a
compatible SMD microphone. Microphones tested in the prototyping process failed
to provide proper amplification, thus leading to an unresponsive equalizer.
Eventually, a Sparkfun breakout board was found that employed an SMD microphone
and used a separate amplifier chip for a strong signal. The undersigned was
unable to obtain this board during the prototyping process so a through-hole
microphone with amplification was used to emulate the surface components that
had not yet arrived. As the circuit for the Sparkfun breakout board was posted
online, it could later be integrated into the undersigned‚Äôs flex PCB.
Programming the prototype was a straightforward process thanks to the use of
Arduino C and previous experience programming these types of devices.</p>

<p><img src="../assets/img/FE/breadboard.png" alt="Flex PCB" /></p>
<center><b>Breadboard Prototype</b></center>

<p>The second step was to design the FE in EAGLE, starting with a circuit diagram.
First, a 7 x 6 LED matrix was created using 1206 SMD LEDs. The matrix was then
connected to two SMD 595 shift registers in a multi-plexed configuration. The
two shift registers were daisy-chained together, thus allowing them to occupy
only 3 pins on the ATmega328PB Microcontroller. Secondly, the equalizer
component of the circuit had to be created. The MSGEQ7 was added to the circuit
and wired in an identical manner to previous equalizers. The FE presented a
unique problem in getting the microphone output into the MSGEQ7. The SMD
requirement for the flex page prevented the use of a through-hole microphone
breakout board employed in previous equalizers. As a result, extra circuitry
needed to be added to amplify and support the ADMP401 SMD microphone. The extra
circuitry is pictured below.</p>

<p><img src="../assets/img/FE/opamp.png" alt="OP Amp" /></p>
<center><b>Microphone Operational Amplifier Circuit</b></center>

<p>The third step was completion of all soldering work upon delivery of the flex
PCB. The PCB has a dense and very small form factor, with many components placed
closely together. Placing the solder paste on each pad individually proved to
require too much precision to do completely by hand. As a result, the task was
completed with the use of a stencil. The stencil for the board is a custom cut
aluminum sheet which has a hole for each pad on the PCB. The flex PCB is
prepared for soldering by taping the PCB to the back of the stencil and aligning
each pad with the corresponding hole on the stencil. Once the board is mounted
to the stencil, solder paste is placed on top of the stencil and spread across
it using a squeegee. The paste is spread until it has sunk through the holes on
the stencil and onto the pads on the PCB. With solder paste placed on the PCB,
the components could then be mounted to be soldered via hot air. Each SMD
component was placed on its corresponding pads using tweezers. Once all the
components were placed on the board, the hot air gun was used to melt solder
paste and solder the components. All the components fell into place without any
bridging of the pads, with the exception of the ATmega328PB TQFP
microcontroller. A few pads were bridged on the microcontroller, thus causing a
short circuit which was corrected by using solder wick to un- bridge the pads.
However, it should be noted that the exposure of the PCB to some heat during
this repair process caused some warping in the area where the microcontroller is
located, but no traces were destroyed.</p>

<p><img src="../assets/img/FE/proto2.jpg" alt="Flex PCB Bare Board" /></p>
<center><b>Flex PCB Bare Board</b></center>

<p>The final and most difficult step of the project was programming and debugging
the FE. The FE worked well initially using Arduino C code. As the undersigned
had written equalizer code on multiple occasions, it was decided to take the
code to lower level assembly. The assembly was nearly complete when the ability
to program the ATmega328PB on the PCB was lost. The issue arose when the flex
cable was removed from the ISP connector of the original board and connected to
the second FE board that had just cooked in the reflow oven. Unfortunately, when
the flex cable was reconnected to the original board, code would no longer flash
on the Arduino IDE and no result was shown after flashing the code successfully
in Atmel Studio. After many hours of troubleshooting, it was discovered that an
issue in the code prevented the PCB from showing any signs of functionality.
This fix only exposed many more underlying problems with ISP flex ports on the
board. The port and flex cable had very weak electronic connections, making it
difficult to program the on board microcontroller. However, the first FE board
to be soldered was beyond repair and no longer functioning. Although the second
PCB was programmable, the connections were too weak to exit <code class="highlighter-rouge">debugWire</code> mode since
the ICE was unable to read the device signature properly and disable the <code class="highlighter-rouge">DW</code>
fuse. The microcontroller being locked in this mode proved to be difficult as it
reduced the chip‚Äôs clock speed and removed the option of using ISP mode to
program the chip with high level code from the Arduino IDE. Fortunately, the
assembly code worked, but the reduced clock speed remained an issue. POV
(persistence of vision) was restored to the matrix by reducing the prescaler to
8 from 1024 on <code class="highlighter-rouge">Timer0</code>, which schedules ADC readings. The prescaler change made
everything appear to run faster but the issue was fully fixed when the <code class="highlighter-rouge">F_CPU</code>
value was redefined at the top of the code forcing a clock speed of 8 Mhz. With
one board up and running, it was time to repair the third board so two working
boards could be submitted to the course instructor. This board also suffered
from a weak ISP connection. To address the issue, a fresh ISP adapter was
soldered and a new flex cable was used so that the connection could be as strong
as possible. Unfortunately, the third board still did not program. Each solder
link was examined with a magnifying glass. This lead to the discovery that the
solder paste on the reset pin of the ATmega328P had not fully melted, thus
making for a weak connection to a pin integral for programming the
microcontroller. The hot air rework station was used to touch up this link,
thereby allowing code to be successfully flashed onto the chip. The assembly
code for the project was difficult to develop but much easier to debug once
hardware issues with the PCB had been fixed. The assembly code consisted of two
interrupts, a timer interrupt to schedule new ADC readings and an interrupt when
the ADC completed a reading. Each time the ADC completed a reading, the code in
the <code class="highlighter-rouge">ADC_Complete</code> label would run. The code in the label would copy the reading
to a general purpose register and map the reading to a value from 0 ‚Äì 5. Once
the reading is collected, another label called <code class="highlighter-rouge">showBand</code> is run using the <code class="highlighter-rouge">rcall</code>
instruction. <code class="highlighter-rouge">showBand</code> takes the reading and displays it in the appropriate
column of the LED Matrix based on the frequency which was read from the MSGEQ7.
The label knows what column to enable based off of the <code class="highlighter-rouge">currentCol</code> register,
which shifts a single bit left each time a new reading is collected from the
MSGEQ7 so that the next column over is enabled. The mapped reading value is then
used to turn on the appropriate number of LEDs within the corresponding column
of the LED Matrix.</p>

<p><img src="../assets/img/FE/running.png" alt="Flex Equalizer Running" /></p>
<center><b>Flex Equalizer Up and Running</b></center>

<h1 id="media">Media</h1>

<p><img src="../assets/img/FE/schematic.png" alt="Schematic" /></p>
<center><b>FE Schematic</b></center>

<p><img src="../assets/img/FE/layout.png" alt="PCB Layout" /></p>
<center><b>FE PCB Layout</b></center>

<h1 id="code">Code</h1>

<figure class="highlight"><pre><code class="language-c" data-lang="c"><span class="cp">#include "prescalers.h"
#define F_CPU 8000000UL ; Define CPU frequency
</span><span class="p">.</span><span class="n">cseg</span>
  <span class="p">.</span><span class="n">org</span> <span class="mh">0x0000</span>
    <span class="n">rjmp</span> <span class="n">reset</span>
  <span class="p">.</span><span class="n">org</span> <span class="mh">0x0020</span>
    <span class="n">rjmp</span> <span class="n">TIM0_OVF</span>
  <span class="p">.</span><span class="n">org</span> <span class="mh">0x002A</span>
     <span class="n">rjmp</span> <span class="n">ADC_Complete</span>

<span class="p">.</span><span class="n">org</span> <span class="mh">0x0040</span> <span class="p">;</span> <span class="n">start</span> <span class="n">past</span> <span class="n">interrupt</span> <span class="n">vector</span> <span class="n">table</span>

<span class="p">.</span><span class="n">equ</span> <span class="n">data</span> <span class="o">=</span> <span class="mi">3</span> <span class="p">;</span> <span class="n">PORTB</span>
<span class="p">.</span><span class="n">equ</span> <span class="n">latch</span> <span class="o">=</span> <span class="mi">2</span>
<span class="p">.</span><span class="n">equ</span> <span class="n">clk</span> <span class="o">=</span> <span class="mi">1</span>

<span class="p">.</span><span class="n">equ</span> <span class="n">strobe</span> <span class="o">=</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">PORTB</span>
<span class="p">.</span><span class="n">equ</span> <span class="n">resetPin</span> <span class="o">=</span> <span class="mi">7</span> <span class="p">;</span> <span class="n">PORTD</span>

<span class="p">.</span><span class="n">def</span> <span class="n">cols</span> <span class="o">=</span> <span class="n">r16</span>
<span class="p">.</span><span class="n">def</span> <span class="n">rows</span> <span class="o">=</span> <span class="n">r17</span>
<span class="p">.</span><span class="n">def</span> <span class="n">reading</span> <span class="o">=</span> <span class="n">r18</span>
<span class="p">.</span><span class="n">def</span> <span class="n">working</span> <span class="o">=</span> <span class="n">r19</span>
<span class="p">.</span><span class="n">def</span> <span class="n">currentBand</span> <span class="o">=</span> <span class="n">r25</span>
<span class="p">.</span><span class="n">def</span> <span class="n">currentCol</span> <span class="o">=</span> <span class="n">r24</span>

<span class="n">reset</span><span class="o">:</span>
  <span class="n">cli</span> <span class="p">;</span> <span class="n">disable</span> <span class="n">interrupts</span> <span class="k">while</span> <span class="n">they</span> <span class="n">are</span> <span class="n">being</span> <span class="n">set</span> <span class="n">up</span>
  <span class="n">ldi</span> <span class="n">currentCol</span><span class="p">,</span> <span class="mi">1</span>
  <span class="n">rcall</span> <span class="n">initPins</span>
  <span class="n">rcall</span> <span class="n">ADCInit</span>
  <span class="n">rcall</span> <span class="n">T0Init</span>
  <span class="n">rcall</span> <span class="n">initMSG</span>
  <span class="n">sei</span> <span class="p">;</span> <span class="n">enable</span> <span class="n">interrupts</span> <span class="n">after</span> <span class="n">they</span> <span class="n">have</span> <span class="n">been</span> <span class="n">configured</span>
  <span class="n">rjmp</span> <span class="n">wait</span> <span class="p">;</span> <span class="n">jump</span> <span class="n">into</span> <span class="n">the</span> <span class="n">main</span> <span class="n">code</span>

<span class="p">;</span> <span class="n">Replace</span> <span class="n">with</span> <span class="n">your</span> <span class="n">application</span> <span class="n">code</span>
<span class="p">;</span> <span class="n">MSBFIRST</span> <span class="n">Shiftout</span> <span class="n">function</span> <span class="n">handling</span> <span class="n">both</span> <span class="n">row</span> <span class="n">and</span> <span class="n">column</span> <span class="n">registers</span> <span class="p">(</span><span class="mi">16</span> <span class="n">pins</span><span class="p">)</span>
<span class="p">.</span><span class="n">MACRO</span> <span class="n">shiftOut</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">latch</span>

  <span class="p">;</span> <span class="n">handle</span> <span class="n">shifting</span> <span class="n">data</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">7</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">6</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">5</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">4</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">3</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">2</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">7</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">6</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">5</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">4</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">3</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">2</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbrc</span> <span class="err">@</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span> <span class="p">;</span> <span class="n">skip</span> <span class="k">if</span> <span class="n">bit</span> <span class="n">in</span> <span class="k">register</span> <span class="n">passed</span> <span class="n">to</span> <span class="n">macro</span> <span class="n">is</span> <span class="n">cleared</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">clk</span>

  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">latch</span>

<span class="p">.</span><span class="n">ENDMACRO</span>

<span class="n">wait</span><span class="o">:</span> <span class="p">;</span> <span class="n">full</span> <span class="n">equalizer</span> <span class="n">code</span> <span class="n">takes</span> <span class="n">place</span> <span class="n">within</span> <span class="n">interrupt</span> <span class="n">service</span> <span class="n">routines</span>
  <span class="n">rjmp</span> <span class="n">wait</span>

<span class="n">initPins</span><span class="o">:</span> <span class="p">;</span> <span class="n">set</span> <span class="n">I</span><span class="o">/</span><span class="n">O</span> <span class="n">pins</span> <span class="n">being</span> <span class="n">used</span> <span class="n">to</span> <span class="n">output</span>
  <span class="n">sbi</span> <span class="n">DDRB</span><span class="p">,</span> <span class="n">data</span>
  <span class="n">sbi</span> <span class="n">DDRB</span><span class="p">,</span> <span class="n">latch</span>
  <span class="n">sbi</span> <span class="n">DDRB</span><span class="p">,</span> <span class="n">clk</span>
  <span class="n">sbi</span> <span class="n">DDRB</span><span class="p">,</span> <span class="n">strobe</span>
  <span class="n">sbi</span> <span class="n">DDRD</span><span class="p">,</span> <span class="n">resetPin</span>
<span class="n">ret</span>

<span class="p">;</span> <span class="n">takes</span> <span class="n">mapped</span> <span class="n">MSGEQ7</span> <span class="n">reading</span> <span class="n">and</span> <span class="n">places</span> <span class="n">it</span> <span class="n">in</span> <span class="n">the</span> <span class="n">right</span> <span class="n">column</span> <span class="n">of</span> <span class="n">LED</span> <span class="n">matrix</span>
<span class="n">showBand</span><span class="o">:</span>
  <span class="n">clr</span> <span class="n">rows</span>

  <span class="p">;</span> <span class="n">test</span> <span class="n">the</span> <span class="n">reading</span> <span class="n">value</span> <span class="n">and</span> <span class="n">branch</span> <span class="n">to</span> <span class="n">a</span> <span class="n">label</span>
  <span class="n">cpi</span> <span class="n">reading</span><span class="p">,</span> <span class="mi">5</span>
  <span class="n">breq</span> <span class="n">rows_5</span>

  <span class="n">cpi</span> <span class="n">reading</span><span class="p">,</span> <span class="mi">4</span>
  <span class="n">breq</span> <span class="n">rows_4</span>

  <span class="n">cpi</span> <span class="n">reading</span><span class="p">,</span> <span class="mi">3</span>
  <span class="n">breq</span> <span class="n">rows_3</span>

  <span class="n">cpi</span> <span class="n">reading</span><span class="p">,</span> <span class="mi">2</span>
  <span class="n">breq</span> <span class="n">rows_2</span>

  <span class="n">cpi</span> <span class="n">reading</span><span class="p">,</span> <span class="mi">1</span>
  <span class="n">breq</span> <span class="n">rows_1</span>

  <span class="n">cpi</span> <span class="n">reading</span><span class="p">,</span> <span class="mi">0</span>
  <span class="n">breq</span> <span class="n">rows_0</span>

  <span class="n">ser</span> <span class="n">rows</span>
  <span class="n">rjmp</span> <span class="n">end</span>

  <span class="n">rows_5</span><span class="o">:</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">5</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">4</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">3</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span>
    <span class="n">rjmp</span> <span class="n">end</span>


  <span class="n">rows_4</span><span class="o">:</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">4</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">3</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span>
    <span class="n">rjmp</span> <span class="n">end</span>

  <span class="n">rows_3</span><span class="o">:</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">3</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span>
    <span class="n">rjmp</span> <span class="n">end</span>

  <span class="n">rows_2</span><span class="o">:</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">2</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span>
    <span class="n">rjmp</span> <span class="n">end</span>

  <span class="n">rows_1</span><span class="o">:</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">1</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span>
    <span class="n">rjmp</span> <span class="n">end</span>

  <span class="n">rows_0</span><span class="o">:</span>
    <span class="n">sbr</span> <span class="n">rows</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="mi">0</span>
    <span class="n">rjmp</span> <span class="n">end</span>

  <span class="n">end</span><span class="o">:</span>
    <span class="n">com</span> <span class="n">rows</span>
    <span class="n">shiftOut</span> <span class="n">rows</span><span class="p">,</span> <span class="n">currentCol</span>
    <span class="n">ret</span>

<span class="n">ADCInit</span><span class="o">:</span>
  <span class="n">ser</span> <span class="n">r16</span> <span class="p">;</span> <span class="n">set</span> <span class="n">all</span> <span class="n">bits</span> <span class="n">in</span> <span class="n">r16</span>
  <span class="n">ldi</span> <span class="n">r16</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">REFS0</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADLAR</span><span class="p">)</span>
  <span class="n">sts</span> <span class="n">ADMUX</span><span class="p">,</span> <span class="n">r16</span>
  <span class="p">;</span> <span class="n">Enable</span><span class="p">,</span> <span class="n">start</span> <span class="n">dummy</span> <span class="n">conversion</span><span class="p">,</span> <span class="n">enable</span> <span class="n">timer</span> <span class="n">as</span> <span class="n">trigger</span><span class="p">,</span> <span class="n">prescaler</span>
  <span class="n">ldi</span> <span class="n">r16</span><span class="p">,</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADEN</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADSC</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADATE</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADIE</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADPS2</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADPS1</span><span class="p">)</span> <span class="o">|</span> <span class="p">(</span><span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADPS0</span><span class="p">)</span>
  <span class="n">sts</span> <span class="n">ADCSRA</span><span class="p">,</span> <span class="n">r16</span>
  <span class="n">ldi</span> <span class="n">r16</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADTS2</span>
  <span class="n">sts</span> <span class="n">ADCSRB</span><span class="p">,</span> <span class="n">r16</span>

<span class="n">dummy</span><span class="o">:</span>
  <span class="n">lds</span> <span class="n">r16</span><span class="p">,</span> <span class="n">ADCSRA</span>
  <span class="n">andi</span> <span class="n">r16</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADIF</span>
  <span class="n">breq</span> <span class="n">dummy</span>
  <span class="n">ret</span>

<span class="n">T0Init</span><span class="o">:</span> <span class="p">;</span> <span class="n">initialize</span> <span class="n">T0</span> <span class="n">interrupt</span> <span class="n">to</span> <span class="n">schedule</span> <span class="n">ADC</span> <span class="n">conversions</span>
  <span class="n">clr</span> <span class="n">r16</span>
  <span class="n">out</span> <span class="n">TCCR0A</span><span class="p">,</span> <span class="n">r16</span> <span class="p">;</span> <span class="n">normal</span> <span class="n">mode</span> <span class="n">OC0A</span><span class="o">/</span><span class="n">B</span> <span class="n">disconnected</span>
  <span class="n">ldi</span> <span class="n">r16</span><span class="p">,</span> <span class="n">T0ps8</span> <span class="p">;</span>
  <span class="n">out</span> <span class="n">TCCR0B</span><span class="p">,</span> <span class="n">r16</span>
  <span class="n">ldi</span> <span class="n">r16</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">TOIE0</span> <span class="p">;</span> <span class="n">Timer</span> <span class="n">interrupt</span> <span class="n">enable</span>
  <span class="n">sts</span> <span class="n">TIMSK0</span><span class="p">,</span> <span class="n">r16</span> <span class="p">;</span> <span class="n">output</span> <span class="n">to</span> <span class="n">mask</span> <span class="k">register</span> <span class="n">to</span>
  <span class="n">ret</span>

<span class="n">TIM0_OVF</span><span class="o">:</span>
  <span class="n">cbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">strobe</span> <span class="p">;</span> <span class="n">make</span> <span class="n">strobe</span> <span class="n">low</span> <span class="n">to</span> <span class="n">grab</span> <span class="n">a</span> <span class="n">frequency</span> <span class="n">band</span>
  <span class="n">rcall</span> <span class="n">delay</span> <span class="p">;</span> <span class="n">let</span> <span class="n">MSG</span> <span class="n">output</span> <span class="n">settle</span>
  <span class="n">lds</span> <span class="n">r16</span><span class="p">,</span> <span class="n">ADCSRA</span> <span class="p">;</span> <span class="n">start</span> <span class="n">an</span> <span class="n">ADC</span> <span class="n">conversion</span>
  <span class="n">sbr</span> <span class="n">r16</span><span class="p">,</span> <span class="mi">1</span> <span class="o">&lt;&lt;</span> <span class="n">ADSC</span> <span class="p">;</span> <span class="n">set</span> <span class="n">the</span> <span class="n">required</span> <span class="n">bit</span>
  <span class="n">sts</span> <span class="n">ADCSRA</span><span class="p">,</span> <span class="n">r16</span>
  <span class="n">reti</span>

<span class="n">ADC_Complete</span><span class="o">:</span> <span class="p">;</span> <span class="n">ISR</span> <span class="k">for</span> <span class="n">when</span> <span class="n">a</span> <span class="n">Analog</span> <span class="n">to</span> <span class="n">Digital</span> <span class="n">Conversion</span> <span class="n">completes</span>
  <span class="n">lds</span> <span class="n">reading</span><span class="p">,</span> <span class="n">ADCH</span> <span class="p">;</span> <span class="n">grab</span> <span class="n">ADC</span> <span class="n">reading</span> <span class="n">and</span> <span class="n">place</span> <span class="n">in</span> <span class="n">gp</span> <span class="n">reg</span>
  <span class="p">;</span> <span class="n">map</span> <span class="n">reading</span> <span class="n">value</span> <span class="n">to</span> <span class="n">a</span> <span class="n">value</span> <span class="n">from</span> <span class="mi">0</span> <span class="o">-</span> <span class="mi">5</span>
  <span class="n">ldi</span> <span class="n">r20</span><span class="p">,</span> <span class="mi">6</span>
  <span class="n">mul</span> <span class="n">r20</span><span class="p">,</span> <span class="n">reading</span>
  <span class="n">mov</span> <span class="n">reading</span><span class="p">,</span> <span class="n">r1</span> <span class="p">;</span> <span class="n">load</span> <span class="n">mapped</span> <span class="n">value</span> <span class="n">back</span> <span class="n">into</span> <span class="n">reading</span> <span class="k">register</span>
  <span class="n">rcall</span> <span class="n">showBand</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">strobe</span> <span class="p">;</span> <span class="n">pulse</span> <span class="n">strobe</span> <span class="n">pin</span> <span class="n">to</span> <span class="n">grab</span> <span class="n">new</span> <span class="n">frequency</span> <span class="n">band</span>
  <span class="n">inc</span> <span class="n">currentBand</span>
  <span class="n">lsl</span> <span class="n">currentCol</span> <span class="p">;</span> <span class="n">shift</span> <span class="n">the</span> <span class="n">column</span> <span class="n">bit</span> <span class="n">left</span> <span class="n">to</span> <span class="n">move</span> <span class="n">to</span> <span class="n">the</span> <span class="n">next</span> <span class="n">column</span>
  <span class="n">cpi</span> <span class="n">currentBand</span><span class="p">,</span> <span class="mi">7</span>
  <span class="n">breq</span> <span class="n">clear</span>
  <span class="n">reti</span>

<span class="n">clear</span><span class="o">:</span> <span class="p">;</span> <span class="n">reset</span> <span class="n">MSG</span> <span class="n">after</span> <span class="n">reading</span> <span class="n">all</span> <span class="mi">7</span> <span class="n">frequency</span> <span class="n">bands</span>
  <span class="n">sbi</span> <span class="n">PORTD</span><span class="p">,</span> <span class="n">resetPin</span>
  <span class="n">cbi</span> <span class="n">PORTD</span><span class="p">,</span> <span class="n">resetPin</span>
  <span class="n">ldi</span> <span class="n">currentCol</span><span class="p">,</span> <span class="mi">1</span>
  <span class="n">clr</span> <span class="n">currentBand</span>
  <span class="n">reti</span>

<span class="n">initMSG</span><span class="o">:</span> <span class="p">;</span> <span class="n">prep</span> <span class="n">MSGEQ7</span> <span class="n">to</span> <span class="n">have</span> <span class="n">to</span> <span class="n">give</span> <span class="n">audio</span> <span class="n">readings</span> <span class="n">in</span> <span class="n">the</span> <span class="n">ADC</span> <span class="n">ISR</span>
  <span class="n">cbi</span> <span class="n">PORTD</span><span class="p">,</span> <span class="n">resetPin</span>
  <span class="n">sbi</span> <span class="n">PORTB</span><span class="p">,</span> <span class="n">strobe</span>
  <span class="n">ret</span>

<span class="n">delay</span><span class="o">:</span> <span class="p">;</span> <span class="mi">22</span> <span class="n">uS</span> <span class="n">delay</span> <span class="k">for</span> <span class="n">reading</span> <span class="n">from</span> <span class="n">the</span> <span class="n">MSGEQ7</span>
  <span class="n">ldi</span> <span class="n">r21</span><span class="p">,</span> <span class="mi">117</span>
  <span class="n">L1</span><span class="o">:</span> <span class="n">dec</span> <span class="n">r21</span>
  <span class="n">brne</span> <span class="n">L1</span>
  <span class="n">nop</span>
  <span class="n">ret</span></code></pre></figure>

<h1 id="conclusion">Conclusion</h1>

<p>Overall, the FE Project qualifies as one of the most sophisticated and
challenging projects the undersigned has completed in the ACES Program. As a
result of the FE Project, an absolutely stronger knowledge of surface mount
soldering and assembly programming was developed. With respect to soldering, the
undersigned acquired skills in the use of a hot air rework station as well as a
reflow oven. With respect to assembly programming, the undersigned acquired
skills specifically relating to the use of interrupts and hardware peripherals
on microcontrollers, such as the analog to digital converter. More importantly,
however, it should be noted that this project has created in the undersigned an
unparalleled sense of pride and achievement with regard to one of the final
projects as an ACES student.</p>

:ET